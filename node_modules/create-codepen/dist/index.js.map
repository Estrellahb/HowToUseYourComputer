{"version":3,"file":"index.js","sources":["../src/options.ts","../src/postlink.ts","../src/types.ts","../src/utils.ts","../src/dom.ts","../src/api.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\nexport interface CodePenStyleOptions {\n  /**\n   * @default 300\n   */\n  height?: number | string;\n\n  /**\n   * @default \"none\"\n   */\n  border?: \"none\" | \"thin\" | \"thick\";\n\n  /**\n   * @default \"#000000\"\n   */\n  \"border-color\"?: string;\n\n  /**\n   * @default \"#3d3d3e\"\n   */\n  \"tab-bar-color\"?: string;\n\n  /**\n   * @default \"#76daff\"\n   */\n  \"tab-link-color\"?: string;\n\n  /**\n   * @default \"#cccccc\"\n   */\n  \"active-tab-color\"?: string;\n\n  /**\n   * @default \"#000000\"\n   */\n  \"active-link-color\"?: string;\n\n  /**\n   * @default #ffffff\n   */\n  \"link-logo-color\"?: string;\n\n  /**\n   * Additional class name\n   */\n  class?: string;\n\n  /**\n   * Custom css link\n   */\n  \"custom-css-url\"?: string;\n}\n\nexport interface CodePenDomOptions\n  extends CodePenStyleOptions,\n    Record<string, unknown> {\n  /**\n   * Id of theme\n   *\n   * @default 0\n   */\n  \"theme-id\"?: string | number;\n\n  \"slug-hash\"?: string;\n\n  user?: string;\n\n  /**\n   * @description one of or a set of \"html\" | \"css\" | \"js\" | \"result\"\n   *\n   * @default \"result\"\n   */\n  \"default-tab\"?: string;\n\n  animations?: \"run\" | \"stop-after-5\";\n\n  preview?: \"true\" | \"false\";\n\n  /**\n   * @default 1\n   */\n  zoom?: 1 | 0.5 | 0.25;\n\n  token?: string;\n\n  \"pen-title\"?: string;\n\n  /**\n   * @default \"false\"\n   */\n  open?: \"true\" | \"false\";\n}\n\nexport interface CodePenPrefillOptions {\n  title?: string;\n  description?: string;\n  head?: string;\n  tags?: string | string[];\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  html_classes?: string | string[];\n  stylesheets?: string | string[];\n  scripts?: string | string[];\n}\n\nexport interface CodePenOptions extends CodePenDomOptions {\n  prefill?: CodePenPrefillOptions;\n\n  /**\n   * @default \"false\"\n   */\n  editable?: \"true\" | \"false\";\n}\n\nconst getUserFromDom = (\n  result: CodePenDomOptions,\n  container: HTMLElement,\n): string => {\n  if (typeof result.user === \"string\") return result.user;\n\n  // try to find a link in users\n  for (const child of Array.from(container.children)) {\n    const link = ((child as HTMLAnchorElement).href || \"\").match(\n      /codepen\\.(io|dev)\\/(\\w+)\\/pen\\//i,\n    );\n\n    if (link) return link[2];\n  }\n\n  return \"anon\";\n};\n\nexport const getOptionsFromDom = (\n  container: HTMLElement,\n): CodePenDomOptions | null => {\n  const { attributes } = container;\n  const result: CodePenDomOptions = {};\n\n  for (const { name, value } of Array.from(attributes)) {\n    if (name.startsWith(\"data-\")) result[name.replace(\"data-\", \"\")] = value;\n  }\n\n  if (\"prefill\" in result || result[\"slug-hash\"]) {\n    result.user = getUserFromDom(result, container);\n\n    return result;\n  }\n\n  return null;\n};\n","import type { CodePenDomOptions } from \"./options.js\";\n\nconst HOST = \"https://codepen.io\";\n\nconst encodeOptions = (options: CodePenDomOptions): string => {\n  let result = \"\";\n\n  for (const key in options)\n    if (key !== \"prefill\" && key !== \"open\") {\n      if (result !== \"\") result += \"&\";\n\n      result += `${key}=${encodeURIComponent(\n        options[key] as string | number | boolean,\n      )}`;\n    }\n\n  return result;\n};\n\nexport const getPostLink = (options: CodePenDomOptions): string => {\n  const path = options.preview === \"true\" ? \"embed/preview\" : \"embed\";\n\n  if (\"prefill\" in options) return [HOST, path, \"prefill\"].join(\"/\");\n\n  let slugHash = options[\"slug-hash\"];\n\n  if (!slugHash) throw new Error(\"slug-hash is required\");\n\n  if (options.token) slugHash += \"/\" + options.token;\n\n  return [\n    HOST,\n    options.user ?? \"anon\",\n    path,\n    slugHash + \"?\" + encodeOptions(options),\n  ]\n    .join(\"/\")\n    .replace(/\\/\\//g, \"//\");\n};\n","const HTML_TYPES = [\n  \"html\",\n  \"xml\",\n  \"haml\",\n  \"markdown\",\n  \"slim\",\n  \"pug\",\n  \"application/x-slim\",\n];\n\nconst CSS_TYPES = [\n  \"css\",\n  \"less\",\n  \"scss\",\n  \"sass\",\n  \"stylus\",\n  \"postcss\",\n  \"text/css\",\n  \"text/x-sass\",\n  \"text/x-scss\",\n  \"text/x-less\",\n  \"text/x-styl\",\n];\n\nconst JS_TYPES = [\n  \"js\",\n  \"javascript\",\n  \"coffeescript\",\n  \"livescript\",\n  \"typescript\",\n  \"babel\",\n  \"text/javascript\",\n  \"text/x-coffeescript\",\n  \"text/x-livescript\",\n  \"text/typescript\",\n];\n\nconst CUSTOM_EDITOR_TYPES: Record<string, string> = {\n  vue: \"js\",\n  flutter: \"js\",\n};\n\nexport const getType = (type = \"\"): string =>\n  HTML_TYPES.includes(type)\n    ? \"html\"\n    : CSS_TYPES.includes(type)\n      ? \"css\"\n      : JS_TYPES.includes(type)\n        ? \"js\"\n        : CUSTOM_EDITOR_TYPES[type]\n          ? CUSTOM_EDITOR_TYPES[type]\n          : \"unknown\";\n","export const createElement = <K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  attributes: Record<string, string | number>,\n): HTMLElementTagNameMap[K] => {\n  const element = document.createElement<K>(tagName);\n\n  for (const attribute in attributes)\n    Object.prototype.hasOwnProperty.call(attributes, attribute) &&\n      element.setAttribute(attribute, attributes[attribute].toString());\n\n  return element;\n};\n","import type { CodePenDomOptions, CodePenOptions } from \"./options.js\";\nimport { getOptionsFromDom } from \"./options.js\";\nimport { getPostLink } from \"./postlink.js\";\nimport { getType } from \"./types.js\";\nimport { createElement } from \"./utils.js\";\n\n/** @private */\ninterface CodePenConfig extends CodePenOptions {\n  data?: string;\n\n  name?: string;\n}\n\nconst ALLOWED_ATTRIBUTES = [\n  \"title\",\n  \"description\",\n  \"tags\",\n  \"html_classes\",\n  \"head\",\n  \"stylesheets\",\n  \"scripts\",\n];\n\nconst getDataFromDOM = (container: HTMLElement): string | void => {\n  if (Object.hasOwn(container.dataset, \"prefill\")) {\n    const options: Record<string, unknown> = {};\n\n    const prefillOptions = JSON.parse(\n      // eslint-disable-next-line  @typescript-eslint/prefer-nullish-coalescing\n      decodeURI(container.dataset.prefill || \"{}\"),\n    ) as Record<string, unknown>;\n\n    for (const key in prefillOptions)\n      if (ALLOWED_ATTRIBUTES.includes(key)) options[key] = prefillOptions[key];\n\n    const elements = Array.from(\n      container.querySelectorAll<HTMLElement>(\"[data-lang]\"),\n    );\n\n    elements.forEach((element) => {\n      const { lang, langVersion, optionsAutoprefixer } = element.dataset;\n\n      if (optionsAutoprefixer) options.css_prefix = \"autoprefixer\";\n\n      const type = getType(lang);\n\n      options[type] = element.innerText;\n\n      if (lang !== type) options[type + \"_pre_processor\"] = lang;\n      if (langVersion) options[type + \"_version\"] = langVersion;\n    });\n\n    return JSON.stringify(options);\n  }\n};\n\nexport const getForm = (options: CodePenConfig): HTMLFormElement => {\n  const form = createElement(\"form\", {\n    class: \"code-pen-embed-form\",\n    style: \"display: none;\",\n    method: \"post\",\n    action: getPostLink(options),\n    target: options.name ?? \"\",\n  });\n\n  for (const key in options)\n    if (key !== \"prefill\")\n      form.append(\n        createElement(\"input\", {\n          type: \"hidden\",\n          name: key,\n          value: String(options[key]),\n        }),\n      );\n\n  return form;\n};\n\nexport const getIframe = (options: CodePenConfig): HTMLIFrameElement => {\n  const {\n    height = 300,\n    class: className = \"\",\n    name = \"CodePen Embed\",\n  } = options;\n  const attribute: Record<string, string | number> = {\n    class: `cp_embed_iframe ${className}`,\n    src: getPostLink(options),\n    allowfullscreen: \"\",\n    allowpaymentrequest: \"\",\n    allowTransparency: \"\",\n    frameborder: 0,\n    width: \"100%\",\n    height,\n    name,\n    scrolling: \"no\",\n    style: \"width: 100%; overflow: hidden; display: block;\",\n    title: options[\"pen-title\"] ?? name,\n  };\n\n  if (!(\"prefill\" in options)) attribute.loading = \"lazy\";\n\n  if (options[\"slug-hash\"])\n    attribute.id = `code-pen-embed-${options[\"slug-hash\"].replace(\"/\", \"_\")}`;\n\n  return createElement(\"iframe\", attribute);\n};\n\nexport const appendFragment = (\n  container: HTMLElement,\n  docFragment: DocumentFragment,\n): HTMLElement => {\n  if (container.parentNode) {\n    const div = document.createElement(\"div\");\n\n    div.className = \"code-pen-embed-wrapper\";\n    div.append(docFragment);\n\n    container.parentNode.replaceChild(div, container);\n\n    return div;\n  }\n\n  container.append(docFragment);\n\n  return container;\n};\n\nconst generateFormWrapper = (\n  options: CodePenDomOptions,\n  container: HTMLElement,\n): void => {\n  const docFragment = document.createDocumentFragment();\n  let form: HTMLFormElement | null = null;\n\n  if (options.open === \"true\") {\n    if (\"prefill\" in options) {\n      const data = getDataFromDOM(container);\n\n      if (data) options.data = data;\n\n      form = getForm(options);\n      container.appendChild(form);\n      form.submit();\n    } else {\n      window.open(getPostLink(options), \"_blank\");\n    }\n\n    return;\n  }\n\n  if (\"prefill\" in options) {\n    const data = getDataFromDOM(container);\n\n    if (data) options.data = data;\n\n    form = getForm(options);\n    docFragment.append(form);\n  }\n\n  docFragment.append(getIframe(options));\n  appendFragment(container, docFragment);\n\n  if (form) form.submit();\n};\n\nlet idIndex = 1;\n\nconst renderCodePens = (\n  selector: string,\n  _options: CodePenDomOptions,\n): void => {\n  const containers = Array.from(\n    document.querySelectorAll<HTMLElement>(selector),\n  );\n\n  for (const container of containers) {\n    const options: CodePenConfig = {\n      ..._options,\n      ...getOptionsFromDom(container),\n    };\n\n    if (options) {\n      options.name = `code-pen-embed-${idIndex++}`;\n      generateFormWrapper(options, container);\n    }\n  }\n};\n\nexport const loadCodePens = (\n  selector = \".codepen\",\n  options: CodePenDomOptions = {},\n): void => {\n  if (document.readyState === \"loading\")\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      renderCodePens(selector, options);\n    });\n  else renderCodePens(selector, options);\n};\n\nexport const openCodePens = (selector = \".codepen\"): void =>\n  loadCodePens(selector, { open: \"true\" });\n","import { appendFragment, getForm, getIframe } from \"./dom.js\";\nimport type { CodePenOptions } from \"./options.js\";\n\nlet idIndex = 1;\n\nexport const renderCodePen = (\n  options: CodePenOptions,\n  selector?: string | HTMLElement,\n): void => {\n  const container =\n    typeof selector === \"string\"\n      ? document.querySelector<HTMLElement>(selector)\n      : selector instanceof HTMLElement\n        ? selector\n        : null;\n\n  if (!options.user) options.user = \"anon\";\n  if (!options.name)\n    options.name = container ? `code-pen-api-${idIndex++}` : \"_blank\";\n\n  const docFragment = document.createDocumentFragment();\n  let form: HTMLFormElement | null = null;\n\n  if (\"prefill\" in options) {\n    options.data = JSON.stringify(options.prefill ?? {});\n    form = getForm(options);\n    docFragment.append(form);\n  }\n\n  if (container) {\n    docFragment.append(getIframe(options));\n    appendFragment(container, docFragment);\n  } else {\n    document.body.appendChild(docFragment);\n  }\n\n  if (form) form.submit();\n};\n"],"names":["getUserFromDom","result","container","child","link","getOptionsFromDom","attributes","name","value","HOST","encodeOptions","options","key","getPostLink","path","slugHash","HTML_TYPES","CSS_TYPES","JS_TYPES","CUSTOM_EDITOR_TYPES","getType","type","createElement","tagName","element","attribute","ALLOWED_ATTRIBUTES","getDataFromDOM","prefillOptions","lang","langVersion","optionsAutoprefixer","getForm","form","getIframe","height","className","appendFragment","docFragment","div","generateFormWrapper","data","idIndex","renderCodePens","selector","_options","containers","loadCodePens","openCodePens","renderCodePen"],"mappings":"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"}